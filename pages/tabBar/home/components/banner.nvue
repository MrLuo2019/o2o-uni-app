<template>
	<view class="uni-container">
		<swiper class="swiper" circular :indicator-dots="indicatorDots" :autoplay="autoplay" :interval="interval" :duration="duration" @change="swiperChange">
			<swiper-item wx:for="(item, index) in bannerListDatas_props" :key="item"><view class="swiper-item uni-bg-red">A</view></swiper-item>
		</swiper>
		<view class="dots">
			<block wx:for="(item, index) in bannerListDatas_props" :key="item"><view class="dot" :class="{ active: index === currentSwiper }"></view></block>
		</view>
	</view>
</template>

<script>
export default {
	props: {
		bannerListDatas: Array
	},
	data() {
		return {
			bannerListDatas_props: this.bannerListDatas,
			background: ['color1', 'color2', 'color3'],
			indicatorDots: false,
			autoplay: false,
			interval: 3000,
			duration: 500,
			currentSwiper: 0
		};
	},
	methods: {
		// 指示点开关
		changeIndicatorDots(e) {
			this.indicatorDots = !this.indicatorDots;
		},
		// 自动播放开关
		changeAutoplay(e) {
			this.autoplay = !this.autoplay;
		},
		intervalChange(e) {
			this.interval = e.detail.value;
		},
		durationChange(e) {
			this.duration = e.detail.value;
		},
		// swiper 切换
		swiperChange(e) {
			console.log(e.detail.value);
			// this.currentSwiper = e.detail.value
		}
	},
	watch: {
		bannerListDatas: {
			handler(newVal, oldVal) {
				this.bannerListDatas_props = newVal;
			},
			immediate: true
		}
	}
};
</script>

<style lang="scss" scoped>
.uni-container {
	position: relative;
	.swiper {
		height: 300rpx;
		overflow: hidden;
		border-radius: 10rpx;
		box-shadow: 0px 5rpx 10rpx rgba($color: #000000, $alpha: 0.5);
		.swiper-item {
			display: block;
			height: 300rpx;
			line-height: 300rpx;
			text-align: center;
		}
	}
	.dots {
		left: 0;
		bottom: 20rpx;
		position: absolute;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		.dot {
			width: 16rpx;
			height: 16rpx;
			opacity: 0.5;
			margin: 0 20rpx;
			border-radius: 50%;
			background-color: #ffffff;
			&.active {
				opacity: 1;
			}
		}
	}
}
</style>
